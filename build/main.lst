ARM GAS  /tmp/cczRZA9R.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	Error_Handler:
  25              	.LFB70:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "usb_device.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cczRZA9R.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/cczRZA9R.s 			page 3


  90:Core/Src/main.c ****   MX_TIM3_Init();
  91:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
  93:Core/Src/main.c ****   MX_TIM4_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   app();
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Infinite loop */
  99:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****   while (1)
 101:Core/Src/main.c ****   {
 102:Core/Src/main.c ****     /* USER CODE END WHILE */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     Error_Handler();
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 146:Core/Src/main.c ****   }
ARM GAS  /tmp/cczRZA9R.s 			page 4


 147:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 148:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 149:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE END 4 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void Error_Handler(void)
 164:Core/Src/main.c **** {
  27              		.loc 1 164 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 165:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 166:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 167:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 167 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  /tmp/cczRZA9R.s 			page 5


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cczRZA9R.s 			page 6


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/cczRZA9R.s 			page 7


  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 168:Core/Src/main.c ****   while (1)
  49              		.loc 1 168 3 discriminator 1 view .LVU4
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****   }
  50              		.loc 1 170 3 discriminator 1 view .LVU5
 168:Core/Src/main.c ****   while (1)
  51              		.loc 1 168 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE70:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB69:
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 114 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 80
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 95B0     		sub	sp, sp, #84
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 88
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 115 3 view .LVU8
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 115 22 is_stmt 0 view .LVU9
  78 0004 2822     		movs	r2, #40
  79 0006 0021     		movs	r1, #0
  80 0008 0DEB0200 		add	r0, sp, r2
  81 000c FFF7FEFF 		bl	memset
  82              	.LVL0:
 116:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  83              		.loc 1 116 3 is_stmt 1 view .LVU10
 116:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  84              		.loc 1 116 22 is_stmt 0 view .LVU11
ARM GAS  /tmp/cczRZA9R.s 			page 8


  85 0010 0023     		movs	r3, #0
  86 0012 0593     		str	r3, [sp, #20]
  87 0014 0693     		str	r3, [sp, #24]
  88 0016 0793     		str	r3, [sp, #28]
  89 0018 0893     		str	r3, [sp, #32]
  90 001a 0993     		str	r3, [sp, #36]
 117:Core/Src/main.c **** 
  91              		.loc 1 117 3 is_stmt 1 view .LVU12
 117:Core/Src/main.c **** 
  92              		.loc 1 117 28 is_stmt 0 view .LVU13
  93 001c 0193     		str	r3, [sp, #4]
  94 001e 0293     		str	r3, [sp, #8]
  95 0020 0393     		str	r3, [sp, #12]
  96 0022 0493     		str	r3, [sp, #16]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  97              		.loc 1 122 3 is_stmt 1 view .LVU14
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  98              		.loc 1 122 36 is_stmt 0 view .LVU15
  99 0024 0122     		movs	r2, #1
 100 0026 0A92     		str	r2, [sp, #40]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 101              		.loc 1 123 3 is_stmt 1 view .LVU16
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 102              		.loc 1 123 30 is_stmt 0 view .LVU17
 103 0028 4FF48033 		mov	r3, #65536
 104 002c 0B93     		str	r3, [sp, #44]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 105              		.loc 1 124 3 is_stmt 1 view .LVU18
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 106              		.loc 1 125 3 view .LVU19
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 107              		.loc 1 125 30 is_stmt 0 view .LVU20
 108 002e 0E92     		str	r2, [sp, #56]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 109              		.loc 1 126 3 is_stmt 1 view .LVU21
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 110              		.loc 1 126 34 is_stmt 0 view .LVU22
 111 0030 0222     		movs	r2, #2
 112 0032 1192     		str	r2, [sp, #68]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 113              		.loc 1 127 3 is_stmt 1 view .LVU23
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 114              		.loc 1 127 35 is_stmt 0 view .LVU24
 115 0034 1293     		str	r3, [sp, #72]
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 116              		.loc 1 128 3 is_stmt 1 view .LVU25
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 117              		.loc 1 128 32 is_stmt 0 view .LVU26
 118 0036 4FF48013 		mov	r3, #1048576
 119 003a 1393     		str	r3, [sp, #76]
 129:Core/Src/main.c ****   {
 120              		.loc 1 129 3 is_stmt 1 view .LVU27
 129:Core/Src/main.c ****   {
 121              		.loc 1 129 7 is_stmt 0 view .LVU28
 122 003c 0AA8     		add	r0, sp, #40
 123 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 124              	.LVL1:
ARM GAS  /tmp/cczRZA9R.s 			page 9


 129:Core/Src/main.c ****   {
 125              		.loc 1 129 6 view .LVU29
 126 0042 D0B9     		cbnz	r0, .L8
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 127              		.loc 1 136 3 is_stmt 1 view .LVU30
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 128              		.loc 1 136 31 is_stmt 0 view .LVU31
 129 0044 0F23     		movs	r3, #15
 130 0046 0593     		str	r3, [sp, #20]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 131              		.loc 1 138 3 is_stmt 1 view .LVU32
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 132              		.loc 1 138 34 is_stmt 0 view .LVU33
 133 0048 0223     		movs	r3, #2
 134 004a 0693     		str	r3, [sp, #24]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 135              		.loc 1 139 3 is_stmt 1 view .LVU34
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 136              		.loc 1 139 35 is_stmt 0 view .LVU35
 137 004c 0023     		movs	r3, #0
 138 004e 0793     		str	r3, [sp, #28]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 139              		.loc 1 140 3 is_stmt 1 view .LVU36
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 140              		.loc 1 140 36 is_stmt 0 view .LVU37
 141 0050 4FF48062 		mov	r2, #1024
 142 0054 0892     		str	r2, [sp, #32]
 141:Core/Src/main.c **** 
 143              		.loc 1 141 3 is_stmt 1 view .LVU38
 141:Core/Src/main.c **** 
 144              		.loc 1 141 36 is_stmt 0 view .LVU39
 145 0056 0993     		str	r3, [sp, #36]
 143:Core/Src/main.c ****   {
 146              		.loc 1 143 3 is_stmt 1 view .LVU40
 143:Core/Src/main.c ****   {
 147              		.loc 1 143 7 is_stmt 0 view .LVU41
 148 0058 0121     		movs	r1, #1
 149 005a 05A8     		add	r0, sp, #20
 150 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 151              	.LVL2:
 143:Core/Src/main.c ****   {
 152              		.loc 1 143 6 view .LVU42
 153 0060 68B9     		cbnz	r0, .L9
 147:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 154              		.loc 1 147 3 is_stmt 1 view .LVU43
 147:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 155              		.loc 1 147 38 is_stmt 0 view .LVU44
 156 0062 1023     		movs	r3, #16
 157 0064 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 158              		.loc 1 148 3 is_stmt 1 view .LVU45
 148:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 159              		.loc 1 148 35 is_stmt 0 view .LVU46
 160 0066 4FF48003 		mov	r3, #4194304
 161 006a 0493     		str	r3, [sp, #16]
 149:Core/Src/main.c ****   {
 162              		.loc 1 149 3 is_stmt 1 view .LVU47
ARM GAS  /tmp/cczRZA9R.s 			page 10


 149:Core/Src/main.c ****   {
 163              		.loc 1 149 7 is_stmt 0 view .LVU48
 164 006c 01A8     		add	r0, sp, #4
 165 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 166              	.LVL3:
 149:Core/Src/main.c ****   {
 167              		.loc 1 149 6 view .LVU49
 168 0072 30B9     		cbnz	r0, .L10
 153:Core/Src/main.c **** 
 169              		.loc 1 153 1 view .LVU50
 170 0074 15B0     		add	sp, sp, #84
 171              	.LCFI2:
 172              		.cfi_remember_state
 173              		.cfi_def_cfa_offset 4
 174              		@ sp needed
 175 0076 5DF804FB 		ldr	pc, [sp], #4
 176              	.L8:
 177              	.LCFI3:
 178              		.cfi_restore_state
 131:Core/Src/main.c ****   }
 179              		.loc 1 131 5 is_stmt 1 view .LVU51
 180 007a FFF7FEFF 		bl	Error_Handler
 181              	.LVL4:
 182              	.L9:
 145:Core/Src/main.c ****   }
 183              		.loc 1 145 5 view .LVU52
 184 007e FFF7FEFF 		bl	Error_Handler
 185              	.LVL5:
 186              	.L10:
 151:Core/Src/main.c ****   }
 187              		.loc 1 151 5 view .LVU53
 188 0082 FFF7FEFF 		bl	Error_Handler
 189              	.LVL6:
 190              		.cfi_endproc
 191              	.LFE69:
 193              		.section	.text.main,"ax",%progbits
 194              		.align	1
 195              		.global	main
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	main:
 201              	.LFB68:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 202              		.loc 1 67 1 view -0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI4:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 212              		.loc 1 75 3 view .LVU55
 213 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/cczRZA9R.s 			page 11


 214              	.LVL7:
  82:Core/Src/main.c **** 
 215              		.loc 1 82 3 view .LVU56
 216 0006 FFF7FEFF 		bl	SystemClock_Config
 217              	.LVL8:
  89:Core/Src/main.c ****   MX_TIM3_Init();
 218              		.loc 1 89 3 view .LVU57
 219 000a FFF7FEFF 		bl	MX_GPIO_Init
 220              	.LVL9:
  90:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 221              		.loc 1 90 3 view .LVU58
 222 000e FFF7FEFF 		bl	MX_TIM3_Init
 223              	.LVL10:
  91:Core/Src/main.c ****   MX_USART1_UART_Init();
 224              		.loc 1 91 3 view .LVU59
 225 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 226              	.LVL11:
  92:Core/Src/main.c ****   MX_TIM4_Init();
 227              		.loc 1 92 3 view .LVU60
 228 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 229              	.LVL12:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 230              		.loc 1 93 3 view .LVU61
 231 001a FFF7FEFF 		bl	MX_TIM4_Init
 232              	.LVL13:
  95:Core/Src/main.c ****   /* USER CODE END 2 */
 233              		.loc 1 95 3 view .LVU62
 234 001e FFF7FEFF 		bl	app
 235              	.LVL14:
 236              	.L12:
 100:Core/Src/main.c ****   {
 237              		.loc 1 100 3 discriminator 1 view .LVU63
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 238              		.loc 1 105 3 discriminator 1 view .LVU64
 100:Core/Src/main.c ****   {
 239              		.loc 1 100 9 discriminator 1 view .LVU65
 240 0022 FEE7     		b	.L12
 241              		.cfi_endproc
 242              	.LFE68:
 244              		.text
 245              	.Letext0:
 246              		.file 3 "/home/mark/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_defau
 247              		.file 4 "/home/mark/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 248              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 249              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 250              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 251              		.file 8 "Core/Inc/gpio.h"
 252              		.file 9 "Core/Inc/tim.h"
 253              		.file 10 "USB_DEVICE/App/usb_device.h"
 254              		.file 11 "Core/Inc/usart.h"
 255              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 256              		.file 13 "<built-in>"
ARM GAS  /tmp/cczRZA9R.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cczRZA9R.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/cczRZA9R.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cczRZA9R.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cczRZA9R.s:63     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cczRZA9R.s:194    .text.main:0000000000000000 $t
     /tmp/cczRZA9R.s:200    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_TIM3_Init
MX_USB_DEVICE_Init
MX_USART1_UART_Init
MX_TIM4_Init
app
