ARM GAS  /tmp/ccJfWtGf.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart_app.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.uart_str_RxCPLTCallback,"ax",%progbits
  18              		.align	1
  19              		.weak	uart_str_RxCPLTCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	uart_str_RxCPLTCallback:
  25              	.LFB67:
  26              		.file 1 "BSP/Src/uart_app.c"
   1:BSP/Src/uart_app.c **** #include "uart_app.h"
   2:BSP/Src/uart_app.c **** 
   3:BSP/Src/uart_app.c **** #define Tx_buff_size 32
   4:BSP/Src/uart_app.c **** #define Rx_buff_size 32
   5:BSP/Src/uart_app.c **** 
   6:BSP/Src/uart_app.c **** static uint8_t stop_byte = '\n';
   7:BSP/Src/uart_app.c **** static uint8_t Tx_buff[Tx_buff_size] = {};
   8:BSP/Src/uart_app.c **** static uint8_t Rx_buff[Rx_buff_size] = {};
   9:BSP/Src/uart_app.c **** static uint8_t *Rx_str_return_ptr = NULL;
  10:BSP/Src/uart_app.c **** static uint8_t *Rx_ptr = NULL;
  11:BSP/Src/uart_app.c **** static uint8_t *Rx_end_ptr = &Rx_buff[Rx_buff_size];
  12:BSP/Src/uart_app.c **** 
  13:BSP/Src/uart_app.c **** static enum {
  14:BSP/Src/uart_app.c ****   FREE,
  15:BSP/Src/uart_app.c ****   BUSY
  16:BSP/Src/uart_app.c **** } Tx_state = FREE,
  17:BSP/Src/uart_app.c ****   Rx_state = FREE;
  18:BSP/Src/uart_app.c **** 
  19:BSP/Src/uart_app.c **** 
  20:BSP/Src/uart_app.c **** 
  21:BSP/Src/uart_app.c **** 
  22:BSP/Src/uart_app.c **** static enum ERROR {
  23:BSP/Src/uart_app.c ****   ER_RX_BUF_OVERFLOW,
  24:BSP/Src/uart_app.c ****   ER_RX_BUF_SZ,
  25:BSP/Src/uart_app.c ****   ER_ACCESS,
  26:BSP/Src/uart_app.c ****   ER_INPUT,
  27:BSP/Src/uart_app.c ****   ER_HAL
  28:BSP/Src/uart_app.c **** };
  29:BSP/Src/uart_app.c **** 
  30:BSP/Src/uart_app.c **** 
  31:BSP/Src/uart_app.c **** bool uart_send_mes_IT(uint8_t *message)
  32:BSP/Src/uart_app.c **** {
ARM GAS  /tmp/ccJfWtGf.s 			page 2


  33:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
  34:BSP/Src/uart_app.c ****   {
  35:BSP/Src/uart_app.c ****     uart_error(ER_ACCESS);
  36:BSP/Src/uart_app.c ****     return false;
  37:BSP/Src/uart_app.c ****   }
  38:BSP/Src/uart_app.c ****   else
  39:BSP/Src/uart_app.c ****   {
  40:BSP/Src/uart_app.c ****     if (strlen(message) > Tx_buff_size)
  41:BSP/Src/uart_app.c ****     {
  42:BSP/Src/uart_app.c ****       uart_error(ER_INPUT);
  43:BSP/Src/uart_app.c ****       return false;
  44:BSP/Src/uart_app.c ****     }
  45:BSP/Src/uart_app.c ****     Tx_state = BUSY;
  46:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
  47:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Transmit_IT(&huart1, Tx_buff, strlen(Tx_buff)))
  48:BSP/Src/uart_app.c ****       return true;
  49:BSP/Src/uart_app.c ****     else
  50:BSP/Src/uart_app.c ****     {
  51:BSP/Src/uart_app.c ****       uart_error(ER_HAL);
  52:BSP/Src/uart_app.c ****       return false;
  53:BSP/Src/uart_app.c ****     }
  54:BSP/Src/uart_app.c ****   }
  55:BSP/Src/uart_app.c **** }
  56:BSP/Src/uart_app.c **** 
  57:BSP/Src/uart_app.c **** bool uart_send_mes(uint8_t *message, uint32_t Timeout)    //неправильно работает
  58:BSP/Src/uart_app.c **** {
  59:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
  60:BSP/Src/uart_app.c ****   {
  61:BSP/Src/uart_app.c ****     uart_error(ER_ACCESS);
  62:BSP/Src/uart_app.c ****     return false;
  63:BSP/Src/uart_app.c ****   }
  64:BSP/Src/uart_app.c ****   else
  65:BSP/Src/uart_app.c ****   {
  66:BSP/Src/uart_app.c ****     if (strlen(message) > Tx_buff_size)
  67:BSP/Src/uart_app.c ****     {
  68:BSP/Src/uart_app.c ****       uart_error(ER_INPUT);
  69:BSP/Src/uart_app.c ****       return false;
  70:BSP/Src/uart_app.c ****     }
  71:BSP/Src/uart_app.c ****     Tx_state = BUSY;
  72:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
  73:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Transmit(&huart1, Tx_buff, strlen(Tx_buff), Timeout))
  74:BSP/Src/uart_app.c ****     {
  75:BSP/Src/uart_app.c ****       Tx_state = FREE;
  76:BSP/Src/uart_app.c ****       return true;
  77:BSP/Src/uart_app.c ****     }
  78:BSP/Src/uart_app.c ****     else
  79:BSP/Src/uart_app.c ****     {
  80:BSP/Src/uart_app.c ****       uart_error(ER_HAL);
  81:BSP/Src/uart_app.c ****       return false;
  82:BSP/Src/uart_app.c ****     }
  83:BSP/Src/uart_app.c ****   }
  84:BSP/Src/uart_app.c **** }
  85:BSP/Src/uart_app.c **** 
  86:BSP/Src/uart_app.c **** __weak void uart_str_RxCPLTCallback()
  87:BSP/Src/uart_app.c **** {
  27              		.loc 1 87 1 view -0
  28              		.cfi_startproc
ARM GAS  /tmp/ccJfWtGf.s 			page 3


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  88:BSP/Src/uart_app.c **** }
  32              		.loc 1 88 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE67:
  37              		.section	.text.uart_error,"ax",%progbits
  38              		.align	1
  39              		.global	uart_error
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	uart_error:
  45              	.LVL0:
  46              	.LFB69:
  89:BSP/Src/uart_app.c **** 
  90:BSP/Src/uart_app.c **** bool uart_ask_str_IT(uint8_t *str)
  91:BSP/Src/uart_app.c **** {
  92:BSP/Src/uart_app.c ****   if (Rx_state == BUSY)
  93:BSP/Src/uart_app.c ****   {
  94:BSP/Src/uart_app.c ****     uart_error(ER_INPUT);
  95:BSP/Src/uart_app.c ****     return false;
  96:BSP/Src/uart_app.c ****   }
  97:BSP/Src/uart_app.c ****   else
  98:BSP/Src/uart_app.c ****   {
  99:BSP/Src/uart_app.c ****     if (strlen(str) > Rx_buff_size)
 100:BSP/Src/uart_app.c ****     {
 101:BSP/Src/uart_app.c ****       uart_error(ER_RX_BUF_SZ);
 102:BSP/Src/uart_app.c ****       return false;
 103:BSP/Src/uart_app.c ****     }
 104:BSP/Src/uart_app.c ****     Rx_state = BUSY;
 105:BSP/Src/uart_app.c ****     Rx_str_return_ptr = str;
 106:BSP/Src/uart_app.c ****     Rx_ptr = Rx_buff;
 107:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Receive_IT(&huart1, Rx_ptr, 1))
 108:BSP/Src/uart_app.c ****       return true;
 109:BSP/Src/uart_app.c ****     else
 110:BSP/Src/uart_app.c ****     {
 111:BSP/Src/uart_app.c ****       uart_error(ER_HAL);
 112:BSP/Src/uart_app.c ****       return false;
 113:BSP/Src/uart_app.c ****     }
 114:BSP/Src/uart_app.c ****   }
 115:BSP/Src/uart_app.c **** }
 116:BSP/Src/uart_app.c **** 
 117:BSP/Src/uart_app.c **** void uart_error(enum ERROR error)
 118:BSP/Src/uart_app.c **** {
  47              		.loc 1 118 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 119:BSP/Src/uart_app.c ****   switch (error)
  52              		.loc 1 119 3 view .LVU3
  53 0000 10B9     		cbnz	r0, .L2
 120:BSP/Src/uart_app.c ****   {
 121:BSP/Src/uart_app.c ****   case ER_RX_BUF_OVERFLOW:
ARM GAS  /tmp/ccJfWtGf.s 			page 4


 122:BSP/Src/uart_app.c ****     Rx_state = FREE;
  54              		.loc 1 122 5 view .LVU4
  55              		.loc 1 122 14 is_stmt 0 view .LVU5
  56 0002 024B     		ldr	r3, .L4
  57 0004 0022     		movs	r2, #0
  58 0006 1A70     		strb	r2, [r3]
 123:BSP/Src/uart_app.c ****     break;
  59              		.loc 1 123 5 is_stmt 1 view .LVU6
  60              	.L2:
 124:BSP/Src/uart_app.c ****   case ER_ACCESS:
 125:BSP/Src/uart_app.c ****     break;
 126:BSP/Src/uart_app.c ****   case ER_INPUT:
 127:BSP/Src/uart_app.c ****     break;
 128:BSP/Src/uart_app.c ****   default:
 129:BSP/Src/uart_app.c ****     break;
 130:BSP/Src/uart_app.c ****   }
 131:BSP/Src/uart_app.c **** }
  61              		.loc 1 131 1 is_stmt 0 view .LVU7
  62 0008 7047     		bx	lr
  63              	.L5:
  64 000a 00BF     		.align	2
  65              	.L4:
  66 000c 00000000 		.word	.LANCHOR0
  67              		.cfi_endproc
  68              	.LFE69:
  70              		.section	.text.uart_send_mes_IT,"ax",%progbits
  71              		.align	1
  72              		.global	uart_send_mes_IT
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	uart_send_mes_IT:
  78              	.LVL1:
  79              	.LFB65:
  32:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
  80              		.loc 1 32 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  32:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
  84              		.loc 1 32 1 is_stmt 0 view .LVU9
  85 0000 38B5     		push	{r3, r4, r5, lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 3, -16
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 5, -8
  91              		.cfi_offset 14, -4
  33:BSP/Src/uart_app.c ****   {
  92              		.loc 1 33 3 is_stmt 1 view .LVU10
  33:BSP/Src/uart_app.c ****   {
  93              		.loc 1 33 16 is_stmt 0 view .LVU11
  94 0002 154B     		ldr	r3, .L15
  95 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  33:BSP/Src/uart_app.c ****   {
  96              		.loc 1 33 6 view .LVU12
  97 0006 012B     		cmp	r3, #1
ARM GAS  /tmp/ccJfWtGf.s 			page 5


  98 0008 17D0     		beq	.L12
  99 000a 0446     		mov	r4, r0
  40:BSP/Src/uart_app.c ****     {
 100              		.loc 1 40 5 is_stmt 1 view .LVU13
  40:BSP/Src/uart_app.c ****     {
 101              		.loc 1 40 9 is_stmt 0 view .LVU14
 102 000c FFF7FEFF 		bl	strlen
 103              	.LVL2:
  40:BSP/Src/uart_app.c ****     {
 104              		.loc 1 40 8 view .LVU15
 105 0010 2028     		cmp	r0, #32
 106 0012 17D8     		bhi	.L13
  45:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
 107              		.loc 1 45 5 is_stmt 1 view .LVU16
  45:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
 108              		.loc 1 45 14 is_stmt 0 view .LVU17
 109 0014 104B     		ldr	r3, .L15
 110 0016 0122     		movs	r2, #1
 111 0018 1A70     		strb	r2, [r3]
  46:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Transmit_IT(&huart1, Tx_buff, strlen(Tx_buff)))
 112              		.loc 1 46 5 is_stmt 1 view .LVU18
 113 001a 104D     		ldr	r5, .L15+4
 114 001c 2146     		mov	r1, r4
 115 001e 2846     		mov	r0, r5
 116 0020 FFF7FEFF 		bl	strcpy
 117              	.LVL3:
  47:BSP/Src/uart_app.c ****       return true;
 118              		.loc 1 47 5 view .LVU19
  47:BSP/Src/uart_app.c ****       return true;
 119              		.loc 1 47 58 is_stmt 0 view .LVU20
 120 0024 2846     		mov	r0, r5
 121 0026 FFF7FEFF 		bl	strlen
 122              	.LVL4:
  47:BSP/Src/uart_app.c ****       return true;
 123              		.loc 1 47 19 view .LVU21
 124 002a 82B2     		uxth	r2, r0
 125 002c 2946     		mov	r1, r5
 126 002e 0C48     		ldr	r0, .L15+8
 127 0030 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 128              	.LVL5:
  47:BSP/Src/uart_app.c ****       return true;
 129              		.loc 1 47 8 view .LVU22
 130 0034 58B9     		cbnz	r0, .L14
  48:BSP/Src/uart_app.c ****     else
 131              		.loc 1 48 14 view .LVU23
 132 0036 0120     		movs	r0, #1
 133              	.LVL6:
 134              	.L8:
  55:BSP/Src/uart_app.c **** 
 135              		.loc 1 55 1 view .LVU24
 136 0038 38BD     		pop	{r3, r4, r5, pc}
 137              	.LVL7:
 138              	.L12:
 139              	.LBB2:
  35:BSP/Src/uart_app.c ****     return false;
 140              		.loc 1 35 5 is_stmt 1 view .LVU25
 141 003a 0220     		movs	r0, #2
ARM GAS  /tmp/ccJfWtGf.s 			page 6


 142              	.LVL8:
  35:BSP/Src/uart_app.c ****     return false;
 143              		.loc 1 35 5 is_stmt 0 view .LVU26
 144 003c FFF7FEFF 		bl	uart_error
 145              	.LVL9:
  36:BSP/Src/uart_app.c ****   }
 146              		.loc 1 36 5 is_stmt 1 view .LVU27
  36:BSP/Src/uart_app.c ****   }
 147              		.loc 1 36 12 is_stmt 0 view .LVU28
 148 0040 0020     		movs	r0, #0
 149 0042 F9E7     		b	.L8
 150              	.LVL10:
 151              	.L13:
  36:BSP/Src/uart_app.c ****   }
 152              		.loc 1 36 12 view .LVU29
 153              	.LBE2:
 154              	.LBB3:
  42:BSP/Src/uart_app.c ****       return false;
 155              		.loc 1 42 7 is_stmt 1 view .LVU30
 156 0044 0320     		movs	r0, #3
 157 0046 FFF7FEFF 		bl	uart_error
 158              	.LVL11:
  43:BSP/Src/uart_app.c ****     }
 159              		.loc 1 43 7 view .LVU31
  43:BSP/Src/uart_app.c ****     }
 160              		.loc 1 43 14 is_stmt 0 view .LVU32
 161 004a 0020     		movs	r0, #0
 162 004c F4E7     		b	.L8
 163              	.L14:
 164              	.LBE3:
 165              	.LBB4:
  51:BSP/Src/uart_app.c ****       return false;
 166              		.loc 1 51 7 is_stmt 1 view .LVU33
 167 004e 0420     		movs	r0, #4
 168 0050 FFF7FEFF 		bl	uart_error
 169              	.LVL12:
  52:BSP/Src/uart_app.c ****     }
 170              		.loc 1 52 7 view .LVU34
  52:BSP/Src/uart_app.c ****     }
 171              		.loc 1 52 14 is_stmt 0 view .LVU35
 172 0054 0020     		movs	r0, #0
 173 0056 EFE7     		b	.L8
 174              	.L16:
 175              		.align	2
 176              	.L15:
 177 0058 00000000 		.word	.LANCHOR1
 178 005c 00000000 		.word	.LANCHOR2
 179 0060 00000000 		.word	huart1
 180              	.LBE4:
 181              		.cfi_endproc
 182              	.LFE65:
 184              		.section	.text.uart_send_mes,"ax",%progbits
 185              		.align	1
 186              		.global	uart_send_mes
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
ARM GAS  /tmp/ccJfWtGf.s 			page 7


 191              	uart_send_mes:
 192              	.LVL13:
 193              	.LFB66:
  58:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
 194              		.loc 1 58 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
  58:BSP/Src/uart_app.c ****   if (Tx_state == BUSY)
 198              		.loc 1 58 1 is_stmt 0 view .LVU37
 199 0000 70B5     		push	{r4, r5, r6, lr}
 200              	.LCFI1:
 201              		.cfi_def_cfa_offset 16
 202              		.cfi_offset 4, -16
 203              		.cfi_offset 5, -12
 204              		.cfi_offset 6, -8
 205              		.cfi_offset 14, -4
  59:BSP/Src/uart_app.c ****   {
 206              		.loc 1 59 3 is_stmt 1 view .LVU38
  59:BSP/Src/uart_app.c ****   {
 207              		.loc 1 59 16 is_stmt 0 view .LVU39
 208 0002 184A     		ldr	r2, .L25
 209 0004 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  59:BSP/Src/uart_app.c ****   {
 210              		.loc 1 59 6 view .LVU40
 211 0006 012A     		cmp	r2, #1
 212 0008 1CD0     		beq	.L23
 213 000a 0446     		mov	r4, r0
 214 000c 0E46     		mov	r6, r1
  66:BSP/Src/uart_app.c ****     {
 215              		.loc 1 66 5 is_stmt 1 view .LVU41
  66:BSP/Src/uart_app.c ****     {
 216              		.loc 1 66 9 is_stmt 0 view .LVU42
 217 000e FFF7FEFF 		bl	strlen
 218              	.LVL14:
  66:BSP/Src/uart_app.c ****     {
 219              		.loc 1 66 8 view .LVU43
 220 0012 2028     		cmp	r0, #32
 221 0014 1BD8     		bhi	.L24
  71:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
 222              		.loc 1 71 5 is_stmt 1 view .LVU44
  71:BSP/Src/uart_app.c ****     strcpy(Tx_buff, message);
 223              		.loc 1 71 14 is_stmt 0 view .LVU45
 224 0016 134B     		ldr	r3, .L25
 225 0018 0122     		movs	r2, #1
 226 001a 1A70     		strb	r2, [r3]
  72:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Transmit(&huart1, Tx_buff, strlen(Tx_buff), Timeout))
 227              		.loc 1 72 5 is_stmt 1 view .LVU46
 228 001c 124D     		ldr	r5, .L25+4
 229 001e 2146     		mov	r1, r4
 230 0020 2846     		mov	r0, r5
 231 0022 FFF7FEFF 		bl	strcpy
 232              	.LVL15:
  73:BSP/Src/uart_app.c ****     {
 233              		.loc 1 73 5 view .LVU47
  73:BSP/Src/uart_app.c ****     {
 234              		.loc 1 73 55 is_stmt 0 view .LVU48
ARM GAS  /tmp/ccJfWtGf.s 			page 8


 235 0026 2846     		mov	r0, r5
 236 0028 FFF7FEFF 		bl	strlen
 237              	.LVL16:
  73:BSP/Src/uart_app.c ****     {
 238              		.loc 1 73 19 view .LVU49
 239 002c 3346     		mov	r3, r6
 240 002e 82B2     		uxth	r2, r0
 241 0030 2946     		mov	r1, r5
 242 0032 0E48     		ldr	r0, .L25+8
 243 0034 FFF7FEFF 		bl	HAL_UART_Transmit
 244              	.LVL17:
  73:BSP/Src/uart_app.c ****     {
 245              		.loc 1 73 8 view .LVU50
 246 0038 70B9     		cbnz	r0, .L21
  75:BSP/Src/uart_app.c ****       return true;
 247              		.loc 1 75 7 is_stmt 1 view .LVU51
  75:BSP/Src/uart_app.c ****       return true;
 248              		.loc 1 75 16 is_stmt 0 view .LVU52
 249 003a 0A4B     		ldr	r3, .L25
 250 003c 0022     		movs	r2, #0
 251 003e 1A70     		strb	r2, [r3]
  76:BSP/Src/uart_app.c ****     }
 252              		.loc 1 76 7 is_stmt 1 view .LVU53
  76:BSP/Src/uart_app.c ****     }
 253              		.loc 1 76 14 is_stmt 0 view .LVU54
 254 0040 0120     		movs	r0, #1
 255              	.LVL18:
 256              	.L19:
  84:BSP/Src/uart_app.c **** 
 257              		.loc 1 84 1 view .LVU55
 258 0042 70BD     		pop	{r4, r5, r6, pc}
 259              	.LVL19:
 260              	.L23:
 261              	.LBB5:
  61:BSP/Src/uart_app.c ****     return false;
 262              		.loc 1 61 5 is_stmt 1 view .LVU56
 263 0044 0220     		movs	r0, #2
 264              	.LVL20:
  61:BSP/Src/uart_app.c ****     return false;
 265              		.loc 1 61 5 is_stmt 0 view .LVU57
 266 0046 FFF7FEFF 		bl	uart_error
 267              	.LVL21:
  62:BSP/Src/uart_app.c ****   }
 268              		.loc 1 62 5 is_stmt 1 view .LVU58
  62:BSP/Src/uart_app.c ****   }
 269              		.loc 1 62 12 is_stmt 0 view .LVU59
 270 004a 0020     		movs	r0, #0
 271 004c F9E7     		b	.L19
 272              	.LVL22:
 273              	.L24:
  62:BSP/Src/uart_app.c ****   }
 274              		.loc 1 62 12 view .LVU60
 275              	.LBE5:
 276              	.LBB6:
  68:BSP/Src/uart_app.c ****       return false;
 277              		.loc 1 68 7 is_stmt 1 view .LVU61
 278 004e 0320     		movs	r0, #3
ARM GAS  /tmp/ccJfWtGf.s 			page 9


 279 0050 FFF7FEFF 		bl	uart_error
 280              	.LVL23:
  69:BSP/Src/uart_app.c ****     }
 281              		.loc 1 69 7 view .LVU62
  69:BSP/Src/uart_app.c ****     }
 282              		.loc 1 69 14 is_stmt 0 view .LVU63
 283 0054 0020     		movs	r0, #0
 284 0056 F4E7     		b	.L19
 285              	.L21:
 286              	.LBE6:
 287              	.LBB7:
  80:BSP/Src/uart_app.c ****       return false;
 288              		.loc 1 80 7 is_stmt 1 view .LVU64
 289 0058 0420     		movs	r0, #4
 290 005a FFF7FEFF 		bl	uart_error
 291              	.LVL24:
  81:BSP/Src/uart_app.c ****     }
 292              		.loc 1 81 7 view .LVU65
  81:BSP/Src/uart_app.c ****     }
 293              		.loc 1 81 14 is_stmt 0 view .LVU66
 294 005e 0020     		movs	r0, #0
 295 0060 EFE7     		b	.L19
 296              	.L26:
 297 0062 00BF     		.align	2
 298              	.L25:
 299 0064 00000000 		.word	.LANCHOR1
 300 0068 00000000 		.word	.LANCHOR2
 301 006c 00000000 		.word	huart1
 302              	.LBE7:
 303              		.cfi_endproc
 304              	.LFE66:
 306              		.section	.text.uart_ask_str_IT,"ax",%progbits
 307              		.align	1
 308              		.global	uart_ask_str_IT
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	uart_ask_str_IT:
 314              	.LVL25:
 315              	.LFB68:
  91:BSP/Src/uart_app.c ****   if (Rx_state == BUSY)
 316              		.loc 1 91 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
  91:BSP/Src/uart_app.c ****   if (Rx_state == BUSY)
 320              		.loc 1 91 1 is_stmt 0 view .LVU68
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI2:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
  92:BSP/Src/uart_app.c ****   {
 326              		.loc 1 92 3 is_stmt 1 view .LVU69
  92:BSP/Src/uart_app.c ****   {
 327              		.loc 1 92 16 is_stmt 0 view .LVU70
 328 0002 134B     		ldr	r3, .L36
ARM GAS  /tmp/ccJfWtGf.s 			page 10


 329 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:BSP/Src/uart_app.c ****   {
 330              		.loc 1 92 6 view .LVU71
 331 0006 012B     		cmp	r3, #1
 332 0008 12D0     		beq	.L33
 333 000a 0446     		mov	r4, r0
  99:BSP/Src/uart_app.c ****     {
 334              		.loc 1 99 5 is_stmt 1 view .LVU72
  99:BSP/Src/uart_app.c ****     {
 335              		.loc 1 99 9 is_stmt 0 view .LVU73
 336 000c FFF7FEFF 		bl	strlen
 337              	.LVL26:
  99:BSP/Src/uart_app.c ****     {
 338              		.loc 1 99 8 view .LVU74
 339 0010 2028     		cmp	r0, #32
 340 0012 12D8     		bhi	.L34
 104:BSP/Src/uart_app.c ****     Rx_str_return_ptr = str;
 341              		.loc 1 104 5 is_stmt 1 view .LVU75
 104:BSP/Src/uart_app.c ****     Rx_str_return_ptr = str;
 342              		.loc 1 104 14 is_stmt 0 view .LVU76
 343 0014 0122     		movs	r2, #1
 344 0016 0E4B     		ldr	r3, .L36
 345 0018 1A70     		strb	r2, [r3]
 105:BSP/Src/uart_app.c ****     Rx_ptr = Rx_buff;
 346              		.loc 1 105 5 is_stmt 1 view .LVU77
 105:BSP/Src/uart_app.c ****     Rx_ptr = Rx_buff;
 347              		.loc 1 105 23 is_stmt 0 view .LVU78
 348 001a 0E4B     		ldr	r3, .L36+4
 349 001c 1C60     		str	r4, [r3]
 106:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Receive_IT(&huart1, Rx_ptr, 1))
 350              		.loc 1 106 5 is_stmt 1 view .LVU79
 106:BSP/Src/uart_app.c ****     if (HAL_OK == HAL_UART_Receive_IT(&huart1, Rx_ptr, 1))
 351              		.loc 1 106 12 is_stmt 0 view .LVU80
 352 001e 0E49     		ldr	r1, .L36+8
 353 0020 0E4B     		ldr	r3, .L36+12
 354 0022 1960     		str	r1, [r3]
 107:BSP/Src/uart_app.c ****       return true;
 355              		.loc 1 107 5 is_stmt 1 view .LVU81
 107:BSP/Src/uart_app.c ****       return true;
 356              		.loc 1 107 19 is_stmt 0 view .LVU82
 357 0024 0E48     		ldr	r0, .L36+16
 358 0026 FFF7FEFF 		bl	HAL_UART_Receive_IT
 359              	.LVL27:
 107:BSP/Src/uart_app.c ****       return true;
 360              		.loc 1 107 8 view .LVU83
 361 002a 58B9     		cbnz	r0, .L35
 108:BSP/Src/uart_app.c ****     else
 362              		.loc 1 108 14 view .LVU84
 363 002c 0120     		movs	r0, #1
 364              	.LVL28:
 365              	.L29:
 115:BSP/Src/uart_app.c **** 
 366              		.loc 1 115 1 view .LVU85
 367 002e 10BD     		pop	{r4, pc}
 368              	.LVL29:
 369              	.L33:
 370              	.LBB8:
ARM GAS  /tmp/ccJfWtGf.s 			page 11


  94:BSP/Src/uart_app.c ****     return false;
 371              		.loc 1 94 5 is_stmt 1 view .LVU86
 372 0030 0320     		movs	r0, #3
 373              	.LVL30:
  94:BSP/Src/uart_app.c ****     return false;
 374              		.loc 1 94 5 is_stmt 0 view .LVU87
 375 0032 FFF7FEFF 		bl	uart_error
 376              	.LVL31:
  95:BSP/Src/uart_app.c ****   }
 377              		.loc 1 95 5 is_stmt 1 view .LVU88
  95:BSP/Src/uart_app.c ****   }
 378              		.loc 1 95 12 is_stmt 0 view .LVU89
 379 0036 0020     		movs	r0, #0
 380 0038 F9E7     		b	.L29
 381              	.LVL32:
 382              	.L34:
  95:BSP/Src/uart_app.c ****   }
 383              		.loc 1 95 12 view .LVU90
 384              	.LBE8:
 385              	.LBB9:
 101:BSP/Src/uart_app.c ****       return false;
 386              		.loc 1 101 7 is_stmt 1 view .LVU91
 387 003a 0120     		movs	r0, #1
 388 003c FFF7FEFF 		bl	uart_error
 389              	.LVL33:
 102:BSP/Src/uart_app.c ****     }
 390              		.loc 1 102 7 view .LVU92
 102:BSP/Src/uart_app.c ****     }
 391              		.loc 1 102 14 is_stmt 0 view .LVU93
 392 0040 0020     		movs	r0, #0
 393 0042 F4E7     		b	.L29
 394              	.L35:
 395              	.LBE9:
 396              	.LBB10:
 111:BSP/Src/uart_app.c ****       return false;
 397              		.loc 1 111 7 is_stmt 1 view .LVU94
 398 0044 0420     		movs	r0, #4
 399 0046 FFF7FEFF 		bl	uart_error
 400              	.LVL34:
 112:BSP/Src/uart_app.c ****     }
 401              		.loc 1 112 7 view .LVU95
 112:BSP/Src/uart_app.c ****     }
 402              		.loc 1 112 14 is_stmt 0 view .LVU96
 403 004a 0020     		movs	r0, #0
 404 004c EFE7     		b	.L29
 405              	.L37:
 406 004e 00BF     		.align	2
 407              	.L36:
 408 0050 00000000 		.word	.LANCHOR0
 409 0054 00000000 		.word	.LANCHOR3
 410 0058 00000000 		.word	.LANCHOR5
 411 005c 00000000 		.word	.LANCHOR4
 412 0060 00000000 		.word	huart1
 413              	.LBE10:
 414              		.cfi_endproc
 415              	.LFE68:
 417              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccJfWtGf.s 			page 12


 418              		.align	1
 419              		.global	HAL_UART_RxCpltCallback
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	HAL_UART_RxCpltCallback:
 425              	.LVL35:
 426              	.LFB70:
 132:BSP/Src/uart_app.c **** 
 133:BSP/Src/uart_app.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 134:BSP/Src/uart_app.c **** {
 427              		.loc 1 134 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 135:BSP/Src/uart_app.c ****   if (huart->Instance == USART1)
 431              		.loc 1 135 3 view .LVU98
 432              		.loc 1 135 12 is_stmt 0 view .LVU99
 433 0000 0268     		ldr	r2, [r0]
 434              		.loc 1 135 6 view .LVU100
 435 0002 164B     		ldr	r3, .L46
 436 0004 9A42     		cmp	r2, r3
 437 0006 00D0     		beq	.L45
 438 0008 7047     		bx	lr
 439              	.L45:
 134:BSP/Src/uart_app.c ****   if (huart->Instance == USART1)
 440              		.loc 1 134 1 view .LVU101
 441 000a 70B5     		push	{r4, r5, r6, lr}
 442              	.LCFI3:
 443              		.cfi_def_cfa_offset 16
 444              		.cfi_offset 4, -16
 445              		.cfi_offset 5, -12
 446              		.cfi_offset 6, -8
 447              		.cfi_offset 14, -4
 136:BSP/Src/uart_app.c ****   {
 137:BSP/Src/uart_app.c ****     if (*Rx_ptr != stop_byte)
 448              		.loc 1 137 5 is_stmt 1 view .LVU102
 449              		.loc 1 137 9 is_stmt 0 view .LVU103
 450 000c 144B     		ldr	r3, .L46+4
 451 000e 1968     		ldr	r1, [r3]
 452 0010 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453              		.loc 1 137 8 view .LVU104
 454 0012 0A2B     		cmp	r3, #10
 455 0014 07D0     		beq	.L40
 138:BSP/Src/uart_app.c ****     {
 139:BSP/Src/uart_app.c ****       Rx_ptr++;
 456              		.loc 1 139 7 is_stmt 1 view .LVU105
 457              		.loc 1 139 13 is_stmt 0 view .LVU106
 458 0016 0131     		adds	r1, r1, #1
 459 0018 114B     		ldr	r3, .L46+4
 460 001a 1960     		str	r1, [r3]
 140:BSP/Src/uart_app.c ****       HAL_UART_Receive_IT(&huart1, Rx_ptr, 1);
 461              		.loc 1 140 7 is_stmt 1 view .LVU107
 462 001c 0122     		movs	r2, #1
 463 001e 1148     		ldr	r0, .L46+8
 464              	.LVL36:
 465              		.loc 1 140 7 is_stmt 0 view .LVU108
ARM GAS  /tmp/ccJfWtGf.s 			page 13


 466 0020 FFF7FEFF 		bl	HAL_UART_Receive_IT
 467              	.LVL37:
 468              	.L38:
 141:BSP/Src/uart_app.c ****     }
 142:BSP/Src/uart_app.c ****     else
 143:BSP/Src/uart_app.c ****     {      
 144:BSP/Src/uart_app.c ****       memcpy(Rx_str_return_ptr, Rx_buff, strlen(Rx_buff) - 1);
 145:BSP/Src/uart_app.c ****       Rx_str_return_ptr[strlen(Rx_buff) - 1] = 0;
 146:BSP/Src/uart_app.c ****       memset(Rx_buff, 0, Rx_buff_size);
 147:BSP/Src/uart_app.c ****       Rx_state = FREE;
 148:BSP/Src/uart_app.c ****       uart_str_RxCPLTCallback();
 149:BSP/Src/uart_app.c ****     }
 150:BSP/Src/uart_app.c ****   }
 151:BSP/Src/uart_app.c **** }
 469              		.loc 1 151 1 view .LVU109
 470 0024 70BD     		pop	{r4, r5, r6, pc}
 471              	.LVL38:
 472              	.L40:
 144:BSP/Src/uart_app.c ****       Rx_str_return_ptr[strlen(Rx_buff) - 1] = 0;
 473              		.loc 1 144 7 is_stmt 1 view .LVU110
 474 0026 104B     		ldr	r3, .L46+12
 475 0028 1E68     		ldr	r6, [r3]
 144:BSP/Src/uart_app.c ****       Rx_str_return_ptr[strlen(Rx_buff) - 1] = 0;
 476              		.loc 1 144 42 is_stmt 0 view .LVU111
 477 002a 104C     		ldr	r4, .L46+16
 478 002c 2046     		mov	r0, r4
 479              	.LVL39:
 144:BSP/Src/uart_app.c ****       Rx_str_return_ptr[strlen(Rx_buff) - 1] = 0;
 480              		.loc 1 144 42 view .LVU112
 481 002e FFF7FEFF 		bl	strlen
 482              	.LVL40:
 144:BSP/Src/uart_app.c ****       Rx_str_return_ptr[strlen(Rx_buff) - 1] = 0;
 483              		.loc 1 144 7 view .LVU113
 484 0032 421E     		subs	r2, r0, #1
 485 0034 2146     		mov	r1, r4
 486 0036 3046     		mov	r0, r6
 487 0038 FFF7FEFF 		bl	memcpy
 488              	.LVL41:
 145:BSP/Src/uart_app.c ****       memset(Rx_buff, 0, Rx_buff_size);
 489              		.loc 1 145 7 is_stmt 1 view .LVU114
 145:BSP/Src/uart_app.c ****       memset(Rx_buff, 0, Rx_buff_size);
 490              		.loc 1 145 25 is_stmt 0 view .LVU115
 491 003c 2046     		mov	r0, r4
 492 003e FFF7FEFF 		bl	strlen
 493              	.LVL42:
 145:BSP/Src/uart_app.c ****       memset(Rx_buff, 0, Rx_buff_size);
 494              		.loc 1 145 24 view .LVU116
 495 0042 0138     		subs	r0, r0, #1
 145:BSP/Src/uart_app.c ****       memset(Rx_buff, 0, Rx_buff_size);
 496              		.loc 1 145 46 view .LVU117
 497 0044 0025     		movs	r5, #0
 498 0046 3554     		strb	r5, [r6, r0]
 146:BSP/Src/uart_app.c ****       Rx_state = FREE;
 499              		.loc 1 146 7 is_stmt 1 view .LVU118
 500 0048 2022     		movs	r2, #32
 501 004a 2946     		mov	r1, r5
 502 004c 2046     		mov	r0, r4
ARM GAS  /tmp/ccJfWtGf.s 			page 14


 503 004e FFF7FEFF 		bl	memset
 504              	.LVL43:
 147:BSP/Src/uart_app.c ****       uart_str_RxCPLTCallback();
 505              		.loc 1 147 7 view .LVU119
 147:BSP/Src/uart_app.c ****       uart_str_RxCPLTCallback();
 506              		.loc 1 147 16 is_stmt 0 view .LVU120
 507 0052 074B     		ldr	r3, .L46+20
 508 0054 1D70     		strb	r5, [r3]
 148:BSP/Src/uart_app.c ****     }
 509              		.loc 1 148 7 is_stmt 1 view .LVU121
 510 0056 FFF7FEFF 		bl	uart_str_RxCPLTCallback
 511              	.LVL44:
 512              		.loc 1 151 1 is_stmt 0 view .LVU122
 513 005a E3E7     		b	.L38
 514              	.L47:
 515              		.align	2
 516              	.L46:
 517 005c 00380140 		.word	1073821696
 518 0060 00000000 		.word	.LANCHOR4
 519 0064 00000000 		.word	huart1
 520 0068 00000000 		.word	.LANCHOR3
 521 006c 00000000 		.word	.LANCHOR5
 522 0070 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE70:
 526              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 527              		.align	1
 528              		.global	HAL_UART_TxCpltCallback
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 533              	HAL_UART_TxCpltCallback:
 534              	.LVL45:
 535              	.LFB71:
 152:BSP/Src/uart_app.c **** 
 153:BSP/Src/uart_app.c **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
 154:BSP/Src/uart_app.c **** {
 536              		.loc 1 154 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 155:BSP/Src/uart_app.c ****   if (huart->Instance == USART1)
 541              		.loc 1 155 3 view .LVU124
 542              		.loc 1 155 12 is_stmt 0 view .LVU125
 543 0000 0268     		ldr	r2, [r0]
 544              		.loc 1 155 6 view .LVU126
 545 0002 064B     		ldr	r3, .L51
 546 0004 9A42     		cmp	r2, r3
 547 0006 00D0     		beq	.L50
 548              	.L48:
 156:BSP/Src/uart_app.c ****   {
 157:BSP/Src/uart_app.c ****     if (Tx_state == BUSY)
 158:BSP/Src/uart_app.c ****       Tx_state = FREE;
 159:BSP/Src/uart_app.c ****   }
 160:BSP/Src/uart_app.c **** }...
 549              		.loc 1 160 1 view .LVU127
ARM GAS  /tmp/ccJfWtGf.s 			page 15


 550 0008 7047     		bx	lr
 551              	.L50:
 157:BSP/Src/uart_app.c ****     if (Tx_state == BUSY)
 552              		.loc 1 157 5 is_stmt 1 view .LVU128
 157:BSP/Src/uart_app.c ****     if (Tx_state == BUSY)
 553              		.loc 1 157 18 is_stmt 0 view .LVU129
 554 000a 054B     		ldr	r3, .L51+4
 555 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 157:BSP/Src/uart_app.c ****     if (Tx_state == BUSY)
 556              		.loc 1 157 8 view .LVU130
 557 000e 012B     		cmp	r3, #1
 558 0010 FAD1     		bne	.L48
 158:BSP/Src/uart_app.c ****       Tx_state = FREE;
 559              		.loc 1 158 7 is_stmt 1 view .LVU131
 158:BSP/Src/uart_app.c ****       Tx_state = FREE;
 560              		.loc 1 158 16 is_stmt 0 view .LVU132
 561 0012 034B     		ldr	r3, .L51+4
 562 0014 0022     		movs	r2, #0
 563 0016 1A70     		strb	r2, [r3]
 564              		.loc 1 160 1 view .LVU133
 565 0018 F6E7     		b	.L48
 566              	.L52:
 567 001a 00BF     		.align	2
 568              	.L51:
 569 001c 00380140 		.word	1073821696
 570 0020 00000000 		.word	.LANCHOR1
 571              		.cfi_endproc
 572              	.LFE71:
 574              		.section	.bss.Rx_buff,"aw",%nobits
 575              		.align	2
 576              		.set	.LANCHOR5,. + 0
 579              	Rx_buff:
 580 0000 00000000 		.space	32
 580      00000000 
 580      00000000 
 580      00000000 
 580      00000000 
 581              		.section	.bss.Rx_ptr,"aw",%nobits
 582              		.align	2
 583              		.set	.LANCHOR4,. + 0
 586              	Rx_ptr:
 587 0000 00000000 		.space	4
 588              		.section	.bss.Rx_state,"aw",%nobits
 589              		.set	.LANCHOR0,. + 0
 592              	Rx_state:
 593 0000 00       		.space	1
 594              		.section	.bss.Rx_str_return_ptr,"aw",%nobits
 595              		.align	2
 596              		.set	.LANCHOR3,. + 0
 599              	Rx_str_return_ptr:
 600 0000 00000000 		.space	4
 601              		.section	.bss.Tx_buff,"aw",%nobits
 602              		.align	2
 603              		.set	.LANCHOR2,. + 0
 606              	Tx_buff:
 607 0000 00000000 		.space	32
 607      00000000 
ARM GAS  /tmp/ccJfWtGf.s 			page 16


 607      00000000 
 607      00000000 
 607      00000000 
 608              		.section	.bss.Tx_state,"aw",%nobits
 609              		.set	.LANCHOR1,. + 0
 612              	Tx_state:
 613 0000 00       		.space	1
 614              		.text
 615              	.Letext0:
 616              		.file 2 "/home/mark/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_defau
 617              		.file 3 "/home/mark/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 618              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 619              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 620              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 621              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 622              		.file 8 "/home/mark/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 623              		.file 9 "<built-in>"
 624              		.file 10 "Core/Inc/usart.h"
ARM GAS  /tmp/ccJfWtGf.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart_app.c
     /tmp/ccJfWtGf.s:18     .text.uart_str_RxCPLTCallback:0000000000000000 $t
     /tmp/ccJfWtGf.s:24     .text.uart_str_RxCPLTCallback:0000000000000000 uart_str_RxCPLTCallback
     /tmp/ccJfWtGf.s:38     .text.uart_error:0000000000000000 $t
     /tmp/ccJfWtGf.s:44     .text.uart_error:0000000000000000 uart_error
     /tmp/ccJfWtGf.s:66     .text.uart_error:000000000000000c $d
     /tmp/ccJfWtGf.s:71     .text.uart_send_mes_IT:0000000000000000 $t
     /tmp/ccJfWtGf.s:77     .text.uart_send_mes_IT:0000000000000000 uart_send_mes_IT
     /tmp/ccJfWtGf.s:177    .text.uart_send_mes_IT:0000000000000058 $d
     /tmp/ccJfWtGf.s:185    .text.uart_send_mes:0000000000000000 $t
     /tmp/ccJfWtGf.s:191    .text.uart_send_mes:0000000000000000 uart_send_mes
     /tmp/ccJfWtGf.s:299    .text.uart_send_mes:0000000000000064 $d
     /tmp/ccJfWtGf.s:307    .text.uart_ask_str_IT:0000000000000000 $t
     /tmp/ccJfWtGf.s:313    .text.uart_ask_str_IT:0000000000000000 uart_ask_str_IT
     /tmp/ccJfWtGf.s:408    .text.uart_ask_str_IT:0000000000000050 $d
     /tmp/ccJfWtGf.s:418    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccJfWtGf.s:424    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccJfWtGf.s:517    .text.HAL_UART_RxCpltCallback:000000000000005c $d
     /tmp/ccJfWtGf.s:527    .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccJfWtGf.s:533    .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccJfWtGf.s:569    .text.HAL_UART_TxCpltCallback:000000000000001c $d
     /tmp/ccJfWtGf.s:575    .bss.Rx_buff:0000000000000000 $d
     /tmp/ccJfWtGf.s:579    .bss.Rx_buff:0000000000000000 Rx_buff
     /tmp/ccJfWtGf.s:582    .bss.Rx_ptr:0000000000000000 $d
     /tmp/ccJfWtGf.s:586    .bss.Rx_ptr:0000000000000000 Rx_ptr
     /tmp/ccJfWtGf.s:592    .bss.Rx_state:0000000000000000 Rx_state
     /tmp/ccJfWtGf.s:593    .bss.Rx_state:0000000000000000 $d
     /tmp/ccJfWtGf.s:595    .bss.Rx_str_return_ptr:0000000000000000 $d
     /tmp/ccJfWtGf.s:599    .bss.Rx_str_return_ptr:0000000000000000 Rx_str_return_ptr
     /tmp/ccJfWtGf.s:602    .bss.Tx_buff:0000000000000000 $d
     /tmp/ccJfWtGf.s:606    .bss.Tx_buff:0000000000000000 Tx_buff
     /tmp/ccJfWtGf.s:612    .bss.Tx_state:0000000000000000 Tx_state
     /tmp/ccJfWtGf.s:613    .bss.Tx_state:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
strcpy
HAL_UART_Transmit_IT
huart1
HAL_UART_Transmit
HAL_UART_Receive_IT
memcpy
memset
